// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "CJL"
export const name = "lsp-mcp"
export const version = "0.0.3"
export const displayName = "LSP MCP"
export const description = "LSP MCP Server for VSCode"
export const extensionId = `${publisher}.${name}`

/**
 * Type union of all commands
 */
export type CommandKey = never

/**
 * Commands map registed by `CJL.lsp-mcp`
 */
export const commands = {
} satisfies Record<string, CommandKey>

/**
 * Type union of all customEditors
 */
export type CustomEditorKey = 
  | "gemini.wysiwyg-markdown"

/**
 * CustomEditors map registed by `CJL.lsp-mcp`
 */
export const customEditors = {
  geminiWysiwygMarkdown: "gemini.wysiwyg-markdown",
} satisfies Record<string, CustomEditorKey>

/**
 * Type union of all configs
 */
export type ConfigKey = 
  | "lsp-mcp.enabled"
  | "lsp-mcp.port"
  | "lsp-mcp.maxRetries"

export interface ConfigKeyTypeMap {
  "lsp-mcp.enabled": boolean,
  "lsp-mcp.port": number,
  "lsp-mcp.maxRetries": number,
}

export interface ConfigShorthandMap {
  enabled: "lsp-mcp.enabled",
  port: "lsp-mcp.port",
  maxRetries: "lsp-mcp.maxRetries",
}

export interface ConfigShorthandTypeMap {
  enabled: boolean,
  port: number,
  maxRetries: number,
}

export interface ConfigItem<T extends keyof ConfigKeyTypeMap> {
  key: T,
  default: ConfigKeyTypeMap[T],
}


/**
 * Configs map registered by `CJL.lsp-mcp`
 */
export const configs = {
  /**
   * Enable or disable the LSP MCP server.
   * @key `lsp-mcp.enabled`
   * @default `true`
   * @type `boolean`
   */
  enabled: {
    key: "lsp-mcp.enabled",
    default: true,
  } as ConfigItem<"lsp-mcp.enabled">,
  /**
   * Port for the LSP MCP server.
   * @key `lsp-mcp.port`
   * @default `9527`
   * @type `number`
   */
  port: {
    key: "lsp-mcp.port",
    default: 9527,
  } as ConfigItem<"lsp-mcp.port">,
  /**
   * Maximum number of port retry attempts when the default port is occupied.
   * @key `lsp-mcp.maxRetries`
   * @default `10`
   * @type `number`
   */
  maxRetries: {
    key: "lsp-mcp.maxRetries",
    default: 10,
  } as ConfigItem<"lsp-mcp.maxRetries">,
}

export interface ScopedConfigKeyTypeMap {
  "enabled": boolean,
  "port": number,
  "maxRetries": number,
}

export const scopedConfigs = {
  scope: "lsp-mcp",
  defaults: {
    "enabled": true,
    "port": 9527,
    "maxRetries": 10,
  } satisfies ScopedConfigKeyTypeMap,
}

export interface NestedConfigs {
  "lsp-mcp": {
    "enabled": boolean,
    "port": number,
    "maxRetries": number,
  },
}

export interface NestedScopedConfigs {
  "enabled": boolean,
  "port": number,
  "maxRetries": number,
}

